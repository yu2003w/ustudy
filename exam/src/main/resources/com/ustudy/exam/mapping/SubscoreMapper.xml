<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ustudy.exam.dao.SubscoreDao">

    <resultMap type="com.ustudy.exam.model.score.ExameeSubScore" id="ExameeSubScore">
        <result property="exameeId" column="exameeId"/>
        <result property="exameeNO" column="exameeNO"/>
        <result property="exameeName" column="exameeName"/>
        <result property="clsName" column="clsName"/>
        <result property="score" column="score"/>
	</resultMap>
	
	<resultMap type="com.ustudy.exam.model.score.ObjQuesScore" id="ObjQuesScore">
        <result property="quesno" column="quesno"/>
        <result property="score" column="score"/>
        <result property="answer" column="answer"/>
        <result property="refans" column="refans"/>
	</resultMap>
	
	<resultMap type="com.ustudy.exam.model.score.SubjectQuesScore" id="SubjectQuesScore">
        <result property="quesno" column="quesno"/>
        <result property="aggrscore" column="aggrscore"/>
	</resultMap>
	
	<resultMap type="com.ustudy.exam.model.score.PaperSubScore" id="PaperSubScore">
        <result property="score" column="score"/>
        <result property="objScore" column="obj_score"/>
	</resultMap>

	<delete id="deleteSubscores" parameterType="Long">
		DELETE from subscore where exam_grade_sub_id=#{egsId}
	</delete>

    <!-- currently, mysql batch insert couldn't write back ids. Not sure why it's not supported  -->
	<insert id="saveSubscores" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
		insert into subscore (stuid,exam_grade_sub_id,score,sub_score,obj_score,rank) values  
	    <foreach collection="list" item="item" index="index" separator="," >  
	        (#{item.stuId},#{item.egsId},#{item.score},#{item.subScore},#{item.objScore},#{item.rank})  
	    </foreach>
	    on duplicate key update score=values(score), sub_score=values(sub_score), 
	    obj_score=values(obj_score), rank=values(rank)
	</insert>
	
	<insert id="saveSubChildScores" parameterType="java.util.List">
		insert into subchildscore (parent_id, sub_id, score, rank) values  
	    <foreach collection="list" item="item" index="index" separator="," >  
	        (#{item.parentId},#{item.subId},#{item.score},#{item.rank})  
	    </foreach>
	    on duplicate key update score=values(score), rank=values(rank)
	</insert>
	
	<select id="getSSIDsByEgsId" parameterType="Long" resultType="Long">
	    SELECT id FROM ustudy.subscore where exam_grade_sub_id = #{egsid} order by rank
	</select>
	
	<select id="getExamScores" parameterType="Long" resultType="java.util.Map">
		SELECT SUM(score) score,stuid from subscore 
		where exam_grade_sub_id IN (SELECT id from examgradesub where examid=#{examId}) 
		GROUP BY stuid
	</select>
	
	<select id="getExameeSubScores" parameterType="java.util.Map" resultMap="ExameeSubScore">
		select ee.id as exameeId, ee.exam_code as exameeNO, class.cls_name as clsName, 
		ee.name as exameeName, group_concat(egs.id, '-', subject.name, '-', coalesce(subscore.score, 'NULL'), 
		'-', coalesce(subscore.rank, 'NULL'), '-', coalesce(subscore.obj_score, 'NULL'), '-', 
		coalesce(subscore.sub_score, 'NULL'), '-', coalesce(subscore.mark_img, 'NULL')) as aggrscores from examinee as ee 
		join class on class.id = ee.class_id 
		join examgradesub as egs on egs.examid = ee.examid 
		join subject on subject.id = egs.sub_id 
		left join subscore on (subscore.stuid = ee.id and subscore.exam_grade_sub_id = egs.id) 
		where ee.examid = #{examId} and ee.id = #{exameeId}
	</select>
	
	<select id="getStudentObjScores" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT CONCAT(egs.sub_id,'-',a.quesno) id,a.score from obj_answer a 
		LEFT JOIN paper p ON a.paperid=p.id 
		LEFT JOIN examinee e ON p.exam_code=e.exam_code
		LEFT JOIN examgradesub egs ON egs.id = p.exam_grade_sub_id
		WHERE e.id=#{stuId} and e.examid=#{examId} 
		<if test="subjectId != null and subjectId > 0">
			AND egs.sub_id=#{subjectId}
		</if>
	</select>
	
	<select id="getStudentSubScores" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT CONCAT(egs.sub_id,'-',q.startno) id,a.isfinal,a.isviewed,a.score from answer a
		LEFT JOIN paper p ON a.paperid=p.id  
		LEFT JOIN examinee e ON p.exam_code=e.exam_code
		LEFT JOIN examgradesub egs ON egs.id = p.exam_grade_sub_id
		LEFT JOIN question q on a.quesid=q.id
		WHERE e.id=#{stuId} and e.examid=#{examId} AND q.type != '填空题'
		<if test="subjectId != null and subjectId > 0">
			AND egs.sub_id=#{subjectId}
		</if>
	</select>
	
	<select id="getStudentStepScores" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT CONCAT(egs.sub_id,'-',ast.quesno) id,ast.score FROM answer_step ast 
		LEFT JOIN answer a ON ast.answer_id=a.id
		LEFT JOIN paper p ON a.paperid=p.id
		LEFT JOIN examinee e ON p.exam_code=e.exam_code
		LEFT JOIN examgradesub egs ON p.exam_grade_sub_id=egs.id
		WHERE e.id=#{stuId} and e.examid=#{examId} 
		<if test="subjectId != null and subjectId > 0">
			AND egs.sub_id=#{subjectId}
		</if>
	</select>

    <select id="getObjQuesScore" resultMap="ObjQuesScore" resultType="java.util.List">
		select obj_answer.quesno, obj_answer.score, obj_answer.answer, refanswer.answer as refans 
		from obj_answer 
		join paper on obj_answer.paperid = paper.id 
		join examgradesub as egs on egs.id = paper.exam_grade_sub_id 
		join refanswer on (refanswer.exam_grade_sub_id = egs.id and obj_answer.quesno = refanswer.quesno) 
		join examinee as ee on ee.exam_code = paper.exam_code 
		where egs.id = #{egsId} and ee.exam_code = #{exameeNO}
	</select>
	
	<select id="getSubQuesScore" resultMap="SubjectQuesScore" resultType="java.util.List">
		select (select if(strcmp(question.quesno, '0'), question.quesno, 
		concat(question.startno, '-', question.endno))) as quesno, 
		group_concat(answer.score, '-', answer.isfinal) as aggrscore from answer   
		join paper on paper.id = answer.paperid 
		join examgradesub as egs on egs.id = paper.exam_grade_sub_id 
		join question on question.id = answer.quesid 
		where egs.id = #{egsId} and paper.exam_code = #{exameeNO} 
		group by question.id order by question.quesno
	</select>
	
	<select id="getPaperSubScores" parameterType="Long" resultMap="PaperSubScore">
		SELECT ss.score, ss.obj_score from subscore ss
		JOIN paper p ON ss.exam_grade_sub_id = p.exam_grade_sub_id
		JOIN examinee e ON e.id = ss.stuid and p.exam_code = e.exam_code
		WHERE p.id=#{paperId}
	</select>

</mapper>