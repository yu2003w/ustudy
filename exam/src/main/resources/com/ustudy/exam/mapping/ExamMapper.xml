<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ustudy.exam.dao.ExamDao">

	<resultMap type="com.ustudy.exam.model.Exam" id="ExamResult">
        <id property="id" column="id"/>
        <result property="examName" column="exam_name"/>
        <result property="examDate" column="exam_date"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
    </resultMap>

	<!-- 查询得到全部Exam对象 -->
	<select id="getAllExams" parameterType="string" resultMap="ExamResult">
		SELECT * FROM exam
	</select>
	
	<select id="getExams" parameterType="java.util.Map" resultMap="ExamResult">
		SELECT e.* FROM exam e LEFT JOIN examschool ec ON e.id=ec.examid where schid=#{orgId}
		<if test="finished == false">
		 AND e.status &lt;&gt; '2'
		</if>
		<if test="finished == true">
		 AND e.status = '2'
		</if>
		<if test="gradeId > 0 and subjectId > 0">
		 AND e.id IN (SELECT DISTINCT examid from examgradesub where grade_id=#{gradeId} AND sub_id=#{subjectId})
		</if>
		<if test="subjectId > 0 and gradeId &lt; 1">
		 AND e.id IN (SELECT DISTINCT examid from examgradesub where sub_id=#{subjectId})
		</if>
		<if test="gradeId > 0 and subjectId &lt; 1">
		 AND e.id IN (SELECT DISTINCT examid from examgradesub where grade_id=#{gradeId})
		</if>
		<if test="startDate != ''">
		 AND e.exam_date &gt;= #{startDate,jdbcType=VARCHAR}
		</if>
		<if test="endDate != ''">
		AND e.exam_date &lt;= #{endDate,jdbcType=VARCHAR}
		</if>
		<if test="name != ''">
		AND e.exam_name LIKE concat('%',#{name,jdbcType=VARCHAR},'%')
		</if>
	</select>
	
	<select id="getExamGrades" parameterType="Long" resultType="java.util.Map">
		SELECT id,grade_name from grade where id IN (SELECT DISTINCT grade_id from examgradesub where examid=#{examid}) ORDER BY id
	</select>
	
	<select id="getExamSubjects" parameterType="Long" resultType="java.util.Map">
		SELECT id,name from subject where id IN (SELECT DISTINCT sub_id from examgradesub where examid=#{examid}) ORDER BY id
	</select>
	
	<select id="getExamSummary" parameterType="Long" resultType="java.util.Map">
		SELECT g.grade_name AS gradeName,g.id AS gradeId,s.name AS subjectName,s.id AS subjectId,egs.status AS status,
		egs.temp_upload AS template,egs.mark_switch AS markSwitch,egs.id AS egsId, 
		egs.blank_answer_paper AS answerPaper,egs.blank_questions_paper AS questionsPaper,DATE_FORMAT(e.exam_date,'%Y-%m-%d') AS examDate from examgradesub egs 
		LEFT JOIN grade g ON egs.grade_id=g.id LEFT JOIN subject s on egs.sub_id=s.id LEFT JOIN exam e ON egs.examid=e.id where egs.examid=#{examid}
	</select>
	
	<select id="getExamStudengCount" parameterType="Long" resultType="Long">
		SELECT COUNT(1) from examinee where examid=#{examid}
	</select>

	<!-- 根据类型查询得到Exam对象 -->
	<select id="getExamsByStatus" resultMap="ExamResult">
		select * from ustudy.exam join ustudy.examschool on ustudy.exam.id = ustudy.examschool.examid where 
		examschool.schid=#{sid} and	exam.status=#{status,jdbcType=VARCHAR}
	</select>

	<!-- 根据ID查询得到一个Exam对象-->
	<select id="getExamsById" parameterType="Long" resultMap="ExamResult">
		SELECT * FROM exam where id=#{id}
	</select>

	<select id="getGrades" resultType="java.util.Map">
		select * from grade
	</select>

	<select id="getSubjects" resultType="java.util.Map">
		select * from subject
	</select>
	
	<select id="getLastExam" resultMap="ExamResult">
		SELECT e.* from examgradesub egs LEFT JOIN exam e on egs.examid=e.id ORDER BY e.exam_date DESC LIMIT 1 
	</select>
	
	<select id="getGradeStudentCounts" parameterType="Long" resultType="java.util.Map">
		SELECT count(id) count,gradeId from examinee where examid=#{examid} GROUP BY gradeId
	</select>

	<select id="getEgsStudentCounts" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT count(ee.id) AS count, egs.id AS egsId FROM examinee ee JOIN examgradesub egs ON (ee.examid = egs.examid AND ee.gradeid = egs.grade_id)
		JOIN subject sub ON (egs.sub_id = sub.id) JOIN class cls ON (ee.class_id = cls.id) WHERE (egs.examid = #{examid})
		<if test="artMathCount &gt; 0">
			AND ((sub.type = 0 AND sub.name = '数学' AND cls.cls_type = 'sci') || (sub.type = 0 AND sub.name = '数学(文)' AND cls.cls_type = 'art') || 
			(sub.type = 0 AND sub.name != '数学' AND sub.name != '数学(文)') || ((sub.type = 1 OR sub.type = 3) AND cls.cls_type = 'art') ||
			((sub.type = 2 OR sub.type = 4) AND cls.cls_type = 'sci'))
		</if>
		<if test="artMathCount = 0">
			AND ((sub.type = 0 AND sub.name != '数学(文)') || ((sub.type = 1 OR sub.type = 3) AND cls.cls_type = 'art') || 
			((sub.type = 2 OR sub.type = 4) AND cls.cls_type = 'sci'))
		</if>
		GROUP BY egs.id
	</select>

	<select id="getArtMathCount" parameterType="Long" resultType="Long">
		SELECT count(1) FROM subject sub JOIN examgradesub egs ON sub.id = egs.sub_id WHERE egs.examid = #{examid} AND sub.name = '数学(文)'
	</select>

	<select id="getBranchCount" parameterType="Long" resultType="Long">
		SELECT count(1) FROM class WHERE (cls_type = 'art' OR cls_type = 'sci') AND grade_id in (SELECT grade_id FROM examgradesub WHERE examid = #{examid})
	</select>

	<select id="getSubjectPaperCounts" parameterType="Long" resultType="java.util.Map">
		SELECT count(p.id) count,p.exam_grade_sub_id as egsId from paper p 
		LEFT JOIN examgradesub egs ON egs.id=p.exam_grade_sub_id 
		where egs.examid=#{examid} GROUP BY p.exam_grade_sub_id
	</select>

	<select id="getSubjectQuestions" parameterType="Long" resultType="java.util.Map">
		SELECT q.exam_grade_sub_id as egsId,egs.sub_id subId,q.startno,q.endno,q.type,q.score,q.mark_mode as markMode from question q  
		LEFT JOIN examgradesub egs ON q.exam_grade_sub_id=egs.id 
		where egs.examid=#{examid}
	</select>

	<select id="getSubjectAnswers" parameterType="Long" resultType="java.util.Map">
		SELECT p.exam_grade_sub_id AS egsId,COUNT(a.id) AS count FROM answer a LEFT JOIN paper p ON a.paperid=p.id 
		where isfinal=0 AND p.exam_grade_sub_id in (SELECT id FROM examgradesub where examid=#{examid}) 
		GROUP BY p.exam_grade_sub_id
	</select>
	
	<update id="updateExamStatus" parameterType="java.util.Map">
		UPDATE exam SET status=#{status,jdbcType=VARCHAR} where id=#{examid}
	</update>
	
	<update id="updateEgsStatus" parameterType="java.util.Map">
		UPDATE examgradesub SET status=#{status,jdbcType=VARCHAR} where examid=#{examid}
	</update>

	<update id="updateExamStatusByEgsid" parameterType="java.util.Map">
		UPDATE exam SET status=#{status,jdbcType=VARCHAR} 
		WHERE id=(SELECT examid FROM examgradesub where id=#{egsId})
		<if test='status == "2"'>
		AND (SELECT COUNT(examid) FROM examgradesub where examid=(SELECT examid FROM examgradesub where id=#{egsId}) AND status&lt;&gt;'2')=0
		</if>
	</update>

	<select id="getTeacherExams" parameterType="String" resultType="java.util.Map">
		SELECT e.id examId,e.exam_name examName,g.id gradeId,g.grade_name gradeName,s.id subId,s.name subName,egs.id egsId 
		from examgradesub egs 
		LEFT JOIN exam e ON egs.examid=e.id
		LEFT JOIN grade g ON egs.grade_id=g.id
		LEFT JOIN subject s ON egs.sub_id=s.id
		LEFT JOIN examschool es ON e.id=es.examid
		where e.id=#{orgId,jdbcType=VARCHAR} AND egs.examid in(SELECT examid from examgradesub GROUP BY examid HAVING COUNT(examid)=SUM(status)/3)
	</select>
	
	<select id="getSubjectQuestionPapers" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT p.exam_code examCode,p.paper_img paperImg,IFNULL(cl.id,'') classId,IFNULL(cl.cls_name,'') clsName,
		p.exam_grade_sub_id egsId,q.id quesId from paper p
		LEFT JOIN question q ON p.exam_grade_sub_id=q.exam_grade_sub_id
		LEFT JOIN examinee ee ON p.exam_code=ee.exam_code
		LEFT JOIN class cl ON ee.class_id=cl.id
		LEFT JOIN examgradesub egs ON egs.examid=ee.examid
		where egs.id=p.exam_grade_sub_id AND p.exam_grade_sub_id=#{egsId} AND q.id=#{quesId}
	</select>
	
	<select id="getSubjectQuestionMarkImgs" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT p.exam_code examCode,IFNULL(a.mflag,'') mflag,a.isviewed,a.isfinal,IFNULL(ai.mark_img,'') markImg,IFNULL(ai.ans_mark_img,'') ansMarkImg
		from answer a
		LEFT JOIN answer_img ai ON a.id=ai.ans_id
		LEFT JOIN paper p ON a.paperid=p.id
		where p.exam_grade_sub_id=#{egsId} AND a.quesid=#{quesId}
	</select>
	
</mapper>
