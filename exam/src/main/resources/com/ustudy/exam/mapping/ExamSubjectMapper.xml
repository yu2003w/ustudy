<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ustudy.exam.dao.ExamSubjectDao">

	<resultMap type="com.ustudy.exam.model.ExamSubject" id="ExamSubjectResult">
        <id property="id" column="id"/>
        <result property="examid" column="examid"/>
		<result property="examName" column="exam_name"/>
        <result property="gradeId" column="grade_id"/>
        <result property="gradeName" column="grade_name"/>
        <result property="subId" column="sub_id"/>
        <result property="subName" column="sub_name"/>
        <result property="stuNum" column="stu_num"/>
        <result property="teacNum" column="teac_num"/>
        <result property="examPaper" column="exam_paper"/>
        <result property="examAnswer" column="status"/>
        <result property="examPaperNum" column="exam_paper_num"/>
        <result property="template" column="temp_upload"/>
        <result property="objItemNum" column="obj_item_num"/>
        <result property="subItemNum" column="sub_item_num"/>
        <result property="markSwitch" column="mark_switch"/>
        <result property="uploadBathCount" column="upload_bath_count"/>
        <result property="blankAnswerPaper" column="blank_answer_paper"/>
        <result property="blankQuestionsPaper" column="blank_questions_paper"/>
        <result property="xmlServerPath" column="xml_server_path"/>
        <result property="originalData" column="original_data"/>
		<collection property="questions" javaType="ArrayList" column="id" ofType="com.ustudy.exam.model.QuesAnswer" select="com.ustudy.exam.dao.QuesAnswerDao.getQuesAnswers"/>
    </resultMap>

    <resultMap type="com.ustudy.exam.model.score.ChildObjScore" id="ChildObjScore">
        <result property="eid"    column="eid"/>
        <result property="score"  column="score"/>
        <result property="branch" column="branch"/>
    </resultMap>
    
    <resultMap type="com.ustudy.exam.model.score.ChildSubScore" id="ChildSubScore">
        <result property="eid"    column="eid"/>
        <result property="score"  column="score"/>
        <result property="branch" column="branch"/>
        <result property="markmode" column="markmode"/>
    </resultMap>

	<resultMap type="com.ustudy.exam.model.MarkImage" id="MarkImageResult">
        <result property="paperId" column="paperid"/>
		<result property="quesId" column="quesid"/>
        <result property="qareaId" column="qarea_id"/>
        <result property="pageNo" column="pageno"/>
        <result property="paperImg" column="paper_img"/>
        <result property="markImg" column="mark_img"/>
        <result property="posX" column="posx"/>
        <result property="posY" column="posy"/>
    </resultMap>

	<!-- 根据考试ID和年级ID查询得到一个ExamSubject对象-->
	<select id="getAllExamSubject" parameterType="java.util.Map" resultMap="ExamSubjectResult">
		SELECT egs.*, e.exam_name, g.grade_name FROM examgradesub egs LEFT JOIN exam e ON egs.examid=e.id LEFT JOIN grade g ON g.id=egs.grade_id WHERE 1=1
		<if test="subjectId !=null and subjectId > 0">
		 AND egs.sub_id=#{subjectId}
		</if>
		<if test="gradeId !=null and gradeId > 0">
		 AND egs.grade_id=#{gradeId}
		</if>
		<if test="start !=null and start != ''">
		 AND e.exam_date &gt;= #{start, jdbcType=VARCHAR}
		</if>
		<if test="end !=null and end != ''">
		 AND e.exam_date &lt;= #{end, jdbcType=VARCHAR}
		</if>
		<if test="examName !=null and examName != ''">
		 AND e.exam_name LIKE concat('%',#{examName},'%')
		</if>
	</select>

	<!-- 根据考试ID和年级ID查询得到一个ExamSubject对象-->
	<select id="getAllExamSubjectByExamId" parameterType="Long" resultMap="ExamSubjectResult">
		SELECT egs.*, e.exam_name, g.grade_name, s.name AS sub_name FROM examgradesub egs LEFT JOIN exam e ON egs.examid=e.id
		LEFT JOIN grade g ON egs.grade_id=g.id LEFT JOIN subject s ON egs.sub_id = s.id WHERE egs.examid = #{examId}
	</select>

	<!-- 根据考试ID和年级ID查询得到一个ExamSubject对象-->
	<select id="getAllExamSubjectByExamIdAndGradeId" parameterType="java.util.Map" resultMap="ExamSubjectResult">
		SELECT egs.*, e.exam_name, g.grade_name, s.name AS sub_name FROM examgradesub egs LEFT JOIN exam e ON egs.examid=e.id
		LEFT JOIN grade g ON egs.grade_id=g.id LEFT JOIN subject s ON egs.sub_id = s.id WHERE egs.examid = #{examId}
		 AND egs.grade_id = #{gradeId}
	</select>

	<select id="getExamSubjectStatus" parameterType="java.util.Map" resultMap="ExamSubjectResult">
		SELECT egs.*, e.exam_name, g.grade_name, s.name AS sub_name FROM examgradesub egs LEFT JOIN exam e ON egs.examid=e.id
		LEFT JOIN grade g ON egs.grade_id=g.id LEFT JOIN subject s ON egs.sub_id = s.id WHERE egs.examid = #{examId}
		 AND egs.grade_id = #{gradeId} AND egs.status = #{markingStatus}
		<choose>
			<when test="templateStatus !=null and templateStatus != '-1'">
			 AND egs.temp_upload=#{templateStatus}
			</when>
		</choose>
	</select>

	<!-- 根据考试ID和年级ID查询得到一个ExamSubject对象-->
	<select id="getExamSubjectByExamIdAndGradeIdAndSubjectId" parameterType="java.util.Map" resultMap="ExamSubjectResult">
		SELECT egs.*, e.exam_name, g.grade_name, s.name AS sub_name FROM examgradesub egs LEFT JOIN exam e ON egs.examid=e.id
		LEFT JOIN grade g ON egs.grade_id=g.id LEFT JOIN subject s ON egs.sub_id = s.id WHERE egs.examid = #{examId}
		 AND egs.grade_id = #{gradeId} AND egs.sub_id = #{subjectId}
	</select>

	<!-- 根据考试ID和年级ID查询得到一个ExamSubject对象-->
	<select id="getExamSubjectById" parameterType="Long" resultMap="ExamSubjectResult">
		SELECT egs.*, e.exam_name, g.grade_name, s.name AS sub_name FROM examgradesub egs LEFT JOIN exam e ON egs.examid=e.id
		LEFT JOIN grade g ON egs.grade_id=g.id LEFT JOIN subject s ON egs.sub_id = s.id WHERE egs.id = #{id}
	</select>

	<!-- Get the mark switch value -->
	<select id="getMarkSwitchById" parameterType="Long" resultMap="ExamSubjectResult">
		SELECT mark_switch FROM examgradesub WHERE id = #{id}
	</select>

	<!-- 根据考试ID和年级ID查询得到一个ExamSubject对象-->
	<update id="saveBlankAnswerPaper" parameterType="java.util.Map">
		UPDATE examgradesub SET blank_answer_paper=#{fileName} where id=#{id}
	</update>

	<!-- 根据考试ID和年级ID查询得到一个ExamSubject对象-->
	<update id="saveBlankQuestionsPaper" parameterType="java.util.Map">
		UPDATE examgradesub SET blank_questions_paper=#{fileName} where id=#{id}
	</update>

	<!-- 保存原始模板信息-->
	<update id="saveOriginalData" parameterType="java.util.Map">
		UPDATE examgradesub SET temp_upload=1, blank_answer_paper=#{answerPaper}, original_data=#{originalData}, xml_server_path=#{xmlServerPath,jdbcType=VARCHAR} where id=#{id}
	</update>

	<update id="updateMarkSwitchById" parameterType="java.util.Map">
		<if test="release !=null and release == true">
			UPDATE examgradesub SET mark_switch=1
		</if>
		<if test="release !=null and release == false">
			UPDATE examgradesub SET mark_switch=0
		</if>
		where id=#{egsId}
	</update>
	
	<update id="updateMarkSwitch" parameterType="java.util.Map">
		<if test="release !=null and release == true">
			UPDATE examgradesub SET mark_switch=1
		</if>
		<if test="release !=null and release == false">
			UPDATE examgradesub SET mark_switch=0
		</if>
		WHERE examid=#{examId} AND grade_id=#{gradeId} AND sub_id=#{subjectId}
	</update>

	<update id="updateExamSubjectStatusById" parameterType="java.util.Map">
		<if test="release !=null and release == true">
			UPDATE examgradesub SET status='2'
		</if>
		<if test="release !=null and release == false">
			UPDATE examgradesub SET status='1'
		</if>
		where id=#{egsId}
	</update>
	
	<update id="updateExamSubjectStatus" parameterType="java.util.Map">
		<if test="release !=null and release == true">
			UPDATE examgradesub SET status='2'
		</if>
		<if test="release !=null and release == false">
			UPDATE examgradesub SET status='1' 
		</if>
		WHERE examid=#{examId} AND grade_id=#{gradeId} AND sub_id=#{subjectId}
	</update>
	
	<select id="retrieveEgsSubScores" parameterType="Long" resultMap="ChildSubScore">
		select ee.id as eid, group_concat(ans.isfinal, '-', ans.score) as score, question.branch, 
		question.mark_mode as markmode from answer as ans 
		join paper on paper.id = ans.paperid 
		join examinee as ee on ee.exam_code = paper.exam_code 
		join question on question.id = ans.quesid 
		where paper.exam_grade_sub_id = #{egsId} and ans.isviewed = 1 
		group by ans.quesid, ans.paperid, ee.id order by eid
	</select>
	
	<select id="retrieveEgsObjScores" parameterType="Long" resultMap="ChildObjScore">
		select ifnull(sum(oa.score), 0) as score, examinee.id as eid, question.branch 
		from obj_answer as oa join paper on paper.id = oa.paperid 
		join examinee on examinee.exam_code = paper.exam_code 
		join question on (question.exam_grade_sub_id = paper.exam_grade_sub_id and 
		oa.quesno >= question.startno and question.endno >= oa.quesno) 
		where paper.exam_grade_sub_id = #{egsId} group by eid, question.branch order by eid
	</select>
	
	<!--  commented by Jared on April 11, 2018 -->
	<!-- 
	<select id="getExamSubjectSubjScores" parameterType="Long" resultType="java.util.Map">
		SELECT e.id,a.quesid,a.isviewed,a.isfinal,a.score, question.branch from answer a
		LEFT JOIN paper p on a.paperid=p.id 
		LEFT JOIN examinee e ON p.exam_code=e.exam_code 
		join question on (question.id = a.quesid) 
		WHERE p.exam_grade_sub_id=#{egsId} 
		ORDER BY e.id,a.quesid
	</select>
	-->
	
	<select id="getExamSubjectMarkMode" parameterType="Long" resultType="java.util.Map">
		SELECT id,mark_mode AS markMode from question where exam_grade_sub_id=#{egsId}
	</select>
	
	<select id="isExamAllSubjectPublished" parameterType="Long" resultType="Long">
		SELECT COUNT(1) from examgradesub where examid=#{examId} AND status &lt;&gt; '2';
	</select>

	<select id="getDblMarkImgs" parameterType="Long" resultMap="MarkImageResult">
		SELECT qp.quesid, qp.paperid, qarea_id, pageno, paper_img, mark_img, posx, posy 
		FROM (SELECT quesid, paperid FROM answer GROUP BY quesid, paperid HAVING COUNT(*) = 2) qp 
		JOIN paper p ON qp.paperid = p.id 
		JOIN answer ans ON qp.quesid = ans.quesid AND qp.paperid = ans.paperid 
		JOIN answer_img ansi ON ans.id = ansi.ans_id 
		JOIN quesarea qa ON ansi.qarea_id = qa.id
		WHERE p.exam_grade_sub_id=#{egsId}
		ORDER BY paperid, pageno, posx, posy
	</select>

	<insert id="updateDblMarkImgs" parameterType="java.util.Map">
	    insert into ustudy.dmark_img (quesid, paperid, qarea_id, mark_img) values
	        (#{quesId}, #{paperId}, #{qareaId}, #{markImg})
	    on duplicate key update mark_img=VALUES(mark_img)
	</insert>

	<select id="getFinalMarkImgs" parameterType="Long" resultMap="MarkImageResult">
		SELECT ans.quesid, ans.paperid, qarea_id, pageno, paper_img, mark_img, posx, posy 
		FROM (SELECT quesid, paperid FROM answer GROUP BY quesid, paperid HAVING COUNT(*) = 1) qp 
		JOIN paper p ON qp.paperid = p.id 
		JOIN answer ans ON qp.quesid = ans.quesid AND qp.paperid = ans.paperid 
		JOIN answer_img ansi ON ans.id = ansi.ans_id
		JOIN quesarea qa ON ansi.qarea_id = qa.id
		WHERE p.exam_grade_sub_id=#{egsId}
		UNION
		SELECT ans.quesid, ans.paperid, qarea_id, pageno, paper_img, mark_img, posx, posy 
		FROM answer ans 
		JOIN paper p ON ans.paperid = p.id 
		JOIN answer_img ansi ON ans.id = ansi.ans_id 
		JOIN quesarea qa ON ansi.qarea_id = qa.id 
		WHERE ans.isfinal = 1 AND p.exam_grade_sub_id=#{egsId}
		UNION
		SELECT di.quesid, di.paperid, qarea_id, pageno, paper_img, mark_img, posx, posy 
		FROM dmark_img di
		JOIN paper p ON di.paperid = p.id 
		JOIN quesarea qa ON di.qarea_id = qa.id 
		WHERE p.exam_grade_sub_id=#{egsId}
		ORDER BY paperid, pageno, posx, posy
	</select>

	<update id="updateMarkImg" parameterType="java.util.Map">
		UPDATE subscore ss
		JOIN examinee ee ON ss.stuid = ee.id
		JOIN paper p ON ss.exam_grade_sub_id = p.exam_grade_sub_id AND p.exam_code = ee.exam_code
		SET mark_img=#{markImg} 
		WHERE p.id = ${paperId}
	</update>
</mapper>