set names "utf8";
create database if not exists ustudy character set utf8;
# table definition for class
create table if not exists ustudy.class (
id INT NOT NULL AUTO_INCREMENT,
grade_id INT NOT NULL,
cls_name VARCHAR(32) NOT NULL,
cls_type ENUM ('art','sci','none') NOT NULL DEFAULT 'none',
cls_owner CHAR(11),
PRIMARY KEY (id),
INDEX(grade_id),
UNIQUE KEY(grade_id, cls_name),
FOREIGN KEY (grade_id)
    REFERENCES ustudy.grade(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (cls_owner)
    REFERENCES ustudy.teacher(teacid)
    ON UPDATE CASCADE ON DELETE SET NULL
) ENGINE=InnoDB;

create table if not exists ustudy.student (
id INT NOT NULL AUTO_INCREMENT,
name varchar(100) NOT NULL,
stuno varchar(20) NOT NULL,
schid varchar(11) NOT NULL,
grade ENUM('七年级', '八年级', '九年级', '高一','高二','高三'),
classid INT,
gradeid INT,
category ENUM('普通', '体育', '艺术'),
transient boolean default false,
PRIMARY KEY(id),
INDEX (name, stuno, classid, gradeid, schid),
UNIQUE KEY (stuno),
FOREIGN KEY (classid)
    REFERENCES ustudy.class(id)
    ON DELETE SET NULL ON UPDATE CASCADE,
FOREIGN KEY (gradeid)
    REFERENCES ustudy.grade(id)
    ON DELETE SET NULL ON UPDATE CASCADE,
FOREIGN KEY (schid)
    REFERENCES ustudy.school(schid)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.classsub (
id INT NOT NULL AUTO_INCREMENT,
sub_id int(11) NOT NULL,
cls_id INT NOT NULL,
sub_owner CHAR(11),
PRIMARY KEY(id),
INDEX(cls_id, sub_owner),
FOREIGN KEY (cls_id)
    REFERENCES ustudy.class(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (sub_owner)
    REFERENCES ustudy.teacher(teacid)
    ON UPDATE CASCADE ON DELETE SET NULL,
FOREIGN KEY (sub_id)
    REFERENCES ustudy.subject(id)
    ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.teacherroles (
id INT NOT NULL AUTO_INCREMENT,
role_id INT NOT NULL,
teac_id CHAR(11) NOT NULL,
INDEX(teac_id),
PRIMARY KEY (id),
UNIQUE KEY(role_id,teac_id),
FOREIGN KEY (teac_id)
    REFERENCES ustudy.teacher(teacid)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (role_id)
    REFERENCES ustudy.rolevalue(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# subject leader at department level
create table if not exists ustudy.departsub (
id INT NOT NULL AUTO_INCREMENT,
sub_owner CHAR(11),
sub_id int(11) NOT NULL,
type ENUM('high','junior','primary','other'),
schid varchar(11) NOT NULL,
INDEX(sub_owner, schid, type),
UNIQUE KEY(sub_id, type, schid),
PRIMARY KEY (id),
FOREIGN KEY (schid)
    REFERENCES ustudy.school(schid)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (sub_owner)
    REFERENCES ustudy.teacher(teacid)
    ON UPDATE CASCADE ON DELETE CASCADE 
) ENGINE=InnoDB;

create table if not exists ustudy.teachersub (
id INT NOT NULL AUTO_INCREMENT,
sub_id int(11) NOT NULL,
teac_id CHAR(11) NOT NULL,
INDEX(teac_id),
UNIQUE KEY (sub_id, teac_id),
PRIMARY KEY (id),
FOREIGN KEY (teac_id)
    REFERENCES ustudy.teacher(teacid)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (sub_id)
    REFERENCES ustudy.subject(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.teachergrade (
id INT NOT NULL AUTO_INCREMENT,
grade_id int(11) NOT NULL,
teac_id CHAR(11) NOT NULL,
UNIQUE KEY(teac_id, grade_id),
PRIMARY KEY (id),
FOREIGN KEY (teac_id)
    REFERENCES ustudy.teacher(teacid)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (grade_id)
    REFERENCES ustudy.grade(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.teacherclass (
id INT NOT NULL AUTO_INCREMENT,
class_id INT(11) NOT NULL,
teac_id CHAR(11) NOT NULL,
INDEX(teac_id),
UNIQUE KEY(class_id, teac_id),
PRIMARY KEY (id),
FOREIGN KEY (teac_id)
    REFERENCES ustudy.teacher(teacid)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (class_id)
    REFERENCES ustudy.class(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.teacherjob (
id INT NOT NULL AUTO_INCREMENT,
teacid CHAR(11) NOT NULL,
subject varchar(16) NOT NULL,
grade_id INT NOT NULL,
class_id INT,
role varchar(16),
PRIMARY KEY (id),
INDEX(teacid, grade_id, subject),
FOREIGN KEY(teacid)
    REFERENCES ustudy.teacher(teacid)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (grade_id)
    REFERENCES ustudy.grade(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (class_id)
    REFERENCES ustudy.class(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

