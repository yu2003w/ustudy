# create databases for examination center
set names "utf8";
create database if not exists ustudy character set utf8;

# tables for answer setting
# actually each block defined by paper template contains one or multiple question no,
# start position, height and length
create table if not exists ustudy.question (
id INT NOT NULL AUTO_INCREMENT,
# note, if questno is null, startno/endno should have value
quesno INT,
startno INT,
endno INT, 
type ENUM('单选题','多选题','判断题','填空题','解答题','证明题','作文题','论述题') NOT NULL,
branch varchar(16) default '不分科',
choice_num INT NOT NULL,
score float(3,1) NOT NULL,
assign_mode ENUM ('平均', '动态', '比例'),
mark_mode ENUM ('单评', '双评'),
# score difference for double check
scorediff float(3,1) default 0,
#time out duration for screen this question
duration INT,
teac_owner CHAR(11),
exam_grade_sub_id INT NOT NULL,
remark varchar(1000) DEFAULT NULL COMMENT '备注、注释',
INDEX(exam_grade_sub_id, quesno),
UNIQUE KEY(exam_grade_sub_id, quesno, startno, endno),
PRIMARY KEY (id),
FOREIGN KEY (exam_grade_sub_id)
    REFERENCES ustudy.examgradesub(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (teac_owner)
    REFERENCES ustudy.teacher(teacid)
    ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

# tables for referenced answers
create table if not exists ustudy.refanswer (
id INT NOT NULL AUTO_INCREMENT,
exam_grade_sub_id int(11) DEFAULT NULL COMMENT '考试科目ID',
quesid INT NOT NULL COMMENT 'quesanswer中的记录ID',
quesno INT NOT NULL COMMENT '题目编号',
branch varchar(16) DEFAULT '不分科',
# for multiple choice questions, answer format should be 'A,B,C'
answer VARCHAR(128),
PRIMARY KEY (id),
INDEX(quesid, quesno),
UNIQUE KEY(quesid, quesno),
FOREIGN KEY (quesid)
    REFERENCES ustudy.question(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (exam_grade_sub_id)
    REFERENCES ustudy.examgradesub(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# tables for paper templates, each question block may distribute in serveral regions which 
# may reside in several pages or in the same page
create table if not exists ustudy.quesarea (
id int(11) NOT NULL AUTO_INCREMENT,
exam_grade_sub_id int(11) NOT NULL COMMENT '考试科目ID',
pageno int(11) NOT NULL DEFAULT '1' COMMENT '页码',
file_name varchar(100) DEFAULT NULL COMMENT '当前页扫描图片文件名',
area_id int(11) DEFAULT NULL COMMENT 'question',
posx int(11) NOT NULL DEFAULT '0' COMMENT '横坐标原点',
posy int(11) NOT NULL DEFAULT '0' COMMENT '纵坐标原点',
width int(11) NOT NULL DEFAULT '0' COMMENT '横向宽度',
height int(11) NOT NULL DEFAULT '0' COMMENT '纵向高度',
posbottom int(11) DEFAULT '0' COMMENT '矩形底边位置',
posright int(11) DEFAULT '0' COMMENT '矩形底边位置',
question_type varchar(10) DEFAULT NULL COMMENT '题类型 2填空题，3主观题',
start_question_no int(2) DEFAULT NULL COMMENT '开始题号',
end_question_no int(2) DEFAULT NULL COMMENT '结束题号',
quesid int(11) DEFAULT NULL,
PRIMARY KEY (id),
INDEX(quesid),
FOREIGN KEY (quesid)
    REFERENCES ustudy.question(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (exam_grade_sub_id)
    REFERENCES ustudy.examgradesub(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

# tables for answer setting with sub questions
create table if not exists ustudy.question_step (
id INT NOT NULL AUTO_INCREMENT,
quesid INT(11) NOT NULL,
quesno varchar(16) NOT NULL,
step int(2) DEFAULT '0' COMMENT '步骤',
type enum('填空题','解答题','证明题','作文题','论述题') NOT NULL DEFAULT '解答题',
branch varchar(16) default '不分科',
score float(3,1) NOT NULL,
remark varchar(1000) DEFAULT NULL COMMENT '备注、注释',
PRIMARY KEY (id),
UNIQUE KEY (quesid, quesno, step),
FOREIGN KEY (quesid)
    REFERENCES ustudy.question(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# only meaningful for union examinations
create table if not exists ustudy.schooltask (
id INT NOT NULL AUTO_INCREMENT,
examsch INT NOT NULL,
quesid INT NOT NULL,
ratio FLOAT(3,2) default 0,
assign_mode ENUM('平均','动态'),
PRIMARY KEY (id),
FOREIGN KEY (examsch)
    REFERENCES ustudy.examschool(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (quesid)
    REFERENCES ustudy.question(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.marktask (
id INT NOT NULL AUTO_INCREMENT,
teacid CHAR(11) NOT NULL,
quesid INT NOT NULL,
# for certain teacher, number of task is limited
threshold INT,
marktype ENUM ('标准','问题卷','初评','终评') NOT NULL,
PRIMARY KEY (id),
INDEX(quesid,teacid),
UNIQUE KEY (teacid, quesid, marktype),
FOREIGN KEY (teacid)
    REFERENCES ustudy.teacher(teacid)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (quesid)
    REFERENCES ustudy.question(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.examinee (
id int(11) NOT NULL AUTO_INCREMENT,
exam_code varchar(20) NOT NULL COMMENT '考号',
examid int NOT NULL COMMENT '考试ID',
schid varchar(11) NOT NULL COMMENT '学校ID',
gradeid int NOT NULL COMMENT '年级ID',
class_id INT COMMENT '班级ID',
class_name varchar(20) DEFAULT NULL COMMENT '班级',
name varchar(100) NOT NULL COMMENT '学生姓名',
stuno varchar(20) DEFAULT NULL COMMENT '学号',
status char(1) DEFAULT '1' COMMENT '考生状态(0：缺考，1：正常)',
PRIMARY KEY (id),
UNIQUE KEY (exam_code, examid),
KEY name (name,exam_code,gradeid,schid),
FOREIGN KEY (examid)
    REFERENCES ustudy.exam(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (class_id)
    REFERENCES ustudy.class(id)
    ON DELETE SET NULL ON UPDATE CASCADE,
FOREIGN KEY (gradeid)
    REFERENCES ustudy.grade(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (schid)
    REFERENCES ustudy.school(schid)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='考生信息表';

create table if not exists ustudy.examineesub (
id int(11) NOT NULL AUTO_INCREMENT,
eeid int NOT NULL,
subid int NOT NULL,
PRIMARY KEY(id),
UNIQUE KEY(eeid, subid),
FOREIGN KEY (eeid)
    REFERENCES ustudy.examinee(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (subid)
    REFERENCES ustudy.subject(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

# tables for student paper
create table if not exists ustudy.paper (
id int(11) NOT NULL AUTO_INCREMENT,
exam_code varchar (20) NOT NULL,
exam_grade_sub_id int(11) NOT NULL,
batch_num int(11) DEFAULT NULL COMMENT '试卷所属扫描批次',
paper_img varchar(360) DEFAULT NULL COMMENT '试卷图片地址,多个图片用'',''隔开',
paper_status varchar(1) DEFAULT '0' COMMENT '0.正常，1.缺考，2.异常, 3.异常已处理',
error_status varchar(5) DEFAULT NULL COMMENT '错误代码：0-试卷错误,1-学生信息错误,2-客观题存疑',
PRIMARY KEY(id),
INDEX (exam_code, exam_grade_sub_id),
UNIQUE KEY (exam_code, exam_grade_sub_id),
FOREIGN KEY (exam_code)
    REFERENCES ustudy.examinee(exam_code)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (exam_grade_sub_id)
    REFERENCES ustudy.examgradesub(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.obj_answer (
id int(11) NOT NULL AUTO_INCREMENT,
paperid int(11) NOT NULL COMMENT '所属学生答题卡',
quesno int(11) NOT NULL COMMENT '题号',
score float(3,1) DEFAULT '0' COMMENT '得分',
answer varchar(16) DEFAULT NULL COMMENT '答案',
answerHas int(11) DEFAULT NULL COMMENT '答案数值表示',
PRIMARY KEY(id),
INDEX (paperid, quesno),
UNIQUE KEY(paperid, quesno),
FOREIGN KEY (paperid)
    REFERENCES ustudy.paper(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.multiple_score_set (
id int(11) NOT NULL AUTO_INCREMENT,
exam_grade_sub_id int(11) DEFAULT NULL COMMENT '考试科目ID',
correct_answer_count smallint(6) DEFAULT NULL COMMENT '正确答案数',
student_correct_count smallint(6) DEFAULT NULL COMMENT '学生答对数',
score float(3,1) DEFAULT '0',
PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='多选题答案给分设置';

create table if not exists ustudy.answer (
id INT NOT NULL AUTO_INCREMENT,
quesid INT NOT NULL,
paperid INT NOT NULL,
mflag ENUM ('NONE','BEST','FAQ','BAD'),
problem_paper boolean default false,
isviewed boolean default false,
isfinal boolean default false,
score float(3,1) default 0,
teacid CHAR(11),
PRIMARY KEY(id),
INDEX (quesid, paperid, isviewed, isfinal),
UNIQUE KEY (quesid, paperid, teacid),
FOREIGN KEY (quesid)
    REFERENCES ustudy.question(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (paperid)
    REFERENCES ustudy.paper(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (teacid)
    REFERENCES ustudy.teacher(teacid)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.answer_img (
id INT NOT NULL AUTO_INCREMENT,
mark_img VARCHAR(128),
ans_mark_img VARCHAR(128),
qarea_id int(11) NOT NULL, 
ans_id INT NOT NULL,
INDEX(ans_id),
PRIMARY KEY (id),
UNIQUE KEY (ans_id, qarea_id),
FOREIGN KEY(ans_id)
    REFERENCES ustudy.answer(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(qarea_id)
    REFERENCES ustudy.quesarea(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.answer_step (
id INT NOT NULL AUTO_INCREMENT,
answer_id INT NOT NULL,
quesno INT NOT NULL,
score float(3,1) default 0,
PRIMARY KEY (id),
INDEX(answer_id),
UNIQUE KEY (quesno, answer_id),
FOREIGN KEY (answer_id)
    REFERENCES ustudy.answer(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

create table if not exists ustudy.dmark_img (
id INT NOT NULL AUTO_INCREMENT,
mark_img VARCHAR(128),
quesid int(11) NOT NULL, 
paperid int(11) NOT NULL, 
qarea_id int(11) NOT NULL, 
INDEX(quesid, paperid),
PRIMARY KEY (id),
UNIQUE KEY (quesid, paperid, qarea_id),
FOREIGN KEY(quesid)
    REFERENCES ustudy.question(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(paperid)
    REFERENCES ustudy.paper(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(qarea_id)
    REFERENCES ustudy.quesarea(id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;
